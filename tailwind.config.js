/** @type {import('tailwindcss').Config} */
const defaultTheme = require('tailwindcss/defaultTheme')

const integerPx = (
  size, step = 1, start = 0,
) =>
  Object.fromEntries([...Array(size).keys()]
    .filter(i => i % step === 0)
    .slice(start / step)
    .map(i => [`${i}`, `${i}px`]))

const integer = (
  size, step = 1, start = 0,
) =>
  Object.fromEntries([...Array(size).keys()]
    .filter(i => i % step === 0)
    .slice(start / step)
    .map(i => [`${i}`, `${i}`]))
export default {
  content: [
    "./index.html",
    "./src/**/*.{vue,js,ts,jsx,tsx}",
  ],
  separator: '_',
  theme: {
    spacing: { ...Object.assign(integerPx(1921)) },
    width: theme => ({
      ...theme('spacing'),
      'auto': 'auto',
      '1_2': '50%',
      '1_3': '33.333333%',
      '2_3': '66.666667%',
      '1_4': '25%',
      '2_4': '50%',
      '3_4': '75%',
      '1_5': '20%',
      '2_5': '40%',
      '3_5': '60%',
      '4_5': '80%',
      '1_6': '16.666667%',
      '2_6': '33.333333%',
      '3_6': '50%',
      '4_6': '66.666667%',
      '5_6': '83.333333%',
      '1_12': '8.333333%',
      '2_12': '16.666667%',
      '3_12': '25%',
      '4_12': '33.333333%',
      '5_12': '41.666667%',
      '6_12': '50%',
      '7_12': '58.333333%',
      '8_12': '66.666667%',
      '9_12': '75%',
      '10_12': '83.333333%',
      '11_12': '91.666667%',
      'full': '100%',
      'screen': '100vw',
      'min': 'min-content',
      'max': 'max-content',
    }),
    height: theme => ({
      ...theme('spacing'),
      'auto': 'auto',
      // ...Object.assign(...[2, 3, 4, 5, 6, 12].map(range)),
      '1_2': '50%',
      '1_3': '33.333333%',
      '2_3': '66.666667%',
      '1_4': '25%',
      '2_4': '50%',
      '3_4': '75%',
      '1_5': '20%',
      '2_5': '40%',
      '3_5': '60%',
      '4_5': '80%',
      '1_6': '16.666667%',
      '2_6': '33.333333%',
      '3_6': '50%',
      '4_6': '66.666667%',
      '5_6': '83.333333%',
      '1_12': '8.333333%',
      '2_12': '16.666667%',
      '3_12': '25%',
      '4_12': '33.333333%',
      '5_12': '41.666667%',
      '6_12': '50%',
      '7_12': '58.333333%',
      '8_12': '66.666667%',
      '9_12': '75%',
      '10_12': '83.333333%',
      '11_12': '91.666667%',
      'full': '100%',
      'screen': '100vh',
      'min': 'min-content',
      'max': 'max-content',
    }),
    minWidth: theme => ({
      ...theme('width'),
      fit: 'fit-content',
    }),
    minHeight: theme => ({
      ...theme('height'),
      fit: 'fit-content',
    }),
    maxWidth: theme => ({
      ...theme('width'),
      fit: 'fit-content',
    }),
    maxHeight: theme => ({
      ...theme('height'),
      fit: 'fit-content',
    }),
    columns: {
      auto: 'auto',
      ...Object.assign(integer(13)),
    },
    zIndex: {
      auto: 'auto',
      ...Object.assign(integer(101)),
    },
    borderRadius: {
      ...Object.assign(integerPx(101)),
      full: '50%',
    },
    borderWidth: { ...Object.assign(integerPx(21)) },
    outlineWidth: { ...Object.assign(integerPx(21)) },
    outlineOffset: { ...Object.assign(integerPx(21)) },
    ringWidth: { ...Object.assign(integerPx(21)) },
    ringOffsetWidth: { ...Object.assign(integerPx(21)) },
    backgroundColor: theme => ({
      ...theme('colors'),
      primary: '#466AC3',
    }),
    backgroundSize: {
      full: '100% 100%',
      auto: '100% auto'
    },
    textColor: theme => ({
      ...theme('colors'),
      primary: '#466AC3',
      title: '#333333',
      content: '#666666',
      tip: '#999999',
    }),
    fontSize: {
      ...Object.assign(integerPx(
        100, 1, 10,
      )),
    },
    fontWeight: {
      ...Object.assign(integer(
        1000, 100, 100,
      )),
    },
    lineHeight: theme => ({
      ...theme('spacing'),
      none: '1',
      tight: '1.25',
      snug: '1.375',
      normal: '1.5',
      relaxed: '1.625',
      loose: '2',
    }),
    textDecorationThickness: {
      'auto': 'auto',
      'from-font': 'from-font',
      ...Object.assign(integerPx(21)),
    },
    textUnderlineOffset: {
      auto: 'auto',
      ...Object.assign(integerPx(21)),
    },
    boxShadow: {
      sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',
      DEFAULT: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',
      md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',
      lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',
      xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',
      xxl: '0 25px 50px -12px rgb(0 0 0 / 0.25)',
      inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',
      none: 'none',
    },
    dropShadow: {
      sm: '0 1px 1px rgb(0 0 0 / 0.05)',
      DEFAULT: ['0 1px 2px rgb(0 0 0 / 0.1)', '0 1px 1px rgb(0 0 0 / 0.06)'],
      md: ['0 4px 3px rgb(0 0 0 / 0.07)', '0 2px 2px rgb(0 0 0 / 0.06)'],
      lg: ['0 10px 8px rgb(0 0 0 / 0.04)', '0 4px 3px rgb(0 0 0 / 0.1)'],
      xl: ['0 20px 13px rgb(0 0 0 / 0.03)', '0 8px 5px rgb(0 0 0 / 0.08)'],
      xxl: '0 25px 25px rgb(0 0 0 / 0.15)',
      none: '0 0 #0000',
    },
    blur: { ...Object.assign(integerPx(41)) },
    inset: (theme, { negative }) => ({
      'auto': 'auto',
      ...theme('spacing'),
      ...negative(theme('spacing')),
      '1_2': '50%',
      '1_3': '33.333333%',
      '2_3': '66.666667%',
      '1_4': '25%',
      '2_4': '50%',
      '3_4': '75%',
      'full': '100%',
      '-1_2': '-50%',
      '-1_3': '-33.333333%',
      '-2_3': '-66.666667%',
      '-1_4': '-25%',
      '-2_4': '-50%',
      '-3_4': '-75%',
      '-full': '-100%',
    }),
    translate: (theme, { negative }) => ({
      ...theme('spacing'),
      ...negative(theme('spacing')),
      '1_2': '50%',
      '1_3': '33.333333%',
      '2_3': '66.666667%',
      '1_4': '25%',
      '2_4': '50%',
      '3_4': '75%',
      'full': '100%',
      '-1_2': '-50%',
      '-1_3': '-33.333333%',
      '-2_3': '-66.666667%',
      '-1_4': '-25%',
      '-2_4': '-50%',
      '-3_4': '-75%',
      '-full': '-100%',
    }),
    screens: {},
    extend: {
      flex: {
        2: '2 2 0%',
        3: '3 3 0%',
        4: '4 4 0%',
        5: '5 5 0%',
        6: '6 6 0%',
        7: '7 7 0%',
        8: '8 8 0%',
        9: '9 9 0%',
        10: '10 10 0%',
        11: '11 11 0%',
        12: '12 12 0%',
      },
      colors: {
        bb: {
          1: '#344e41',
          2: '#3a5a40',
          3: '#588157',
          4: '#a3b18a',
          5: '#dad7cd',
        },
        tt: {
          1: '#212529',
          2: '#343a40',
          3: '#495057',
          4: '#6c757d',
          5: '#adb5bd',
          6: '#ced4da',
          7: '#dee2e6',
          8: '#e9ecef',
          9: '#f8f9fa',
        },
      },
      fontFamily: { sans: ['HarmonyOS', ...defaultTheme.fontFamily.sans] },
      keyframes: {
        duang: {
          '0%, 100%': { transform: 'scale(1)' },
          '50%': { transform: 'scale(1.1)' },
        },
        duang1: {
          '0%, 100%': { transform: 'scale(1)' },
          '50%': { transform: 'scale(1.02)' },
        },
        duang2: {
          '0%, 100%': { transform: 'scale(1)' },
          '50%': { transform: 'scale(1.2)' },
        },
        blink: {
          '0%, 100%': { opacity: 1 },
          '50%': { opacity: 0 },
        },
        loading: {
          '0%': { transform: 'rotate(0deg)' },
          '100%': { transform: 'rotate(360deg)' },
        },
        loading2: {
          '0%': { transform: 'translate(-50%, -50%) rotate(0deg)' },
          '100%': { transform: 'translate(-50%, -50%) rotate(360deg)' },
        },
        swing: {
          '0%': { transform: 'rotate(0deg)' },
          '25%': { transform: 'rotate(4deg)' },
          '50%': { transform: 'rotate(0deg)' },
          '75%': { transform: 'rotate(-4deg)' },
          '100%': { transform: 'rotate(0deg)' },
        }
      },
      animation: {
        duang: 'duang 1s ease-in-out infinite',
        duang1: 'duang1 1s ease-in-out infinite',
        duang2: 'duang2 1s ease-in-out infinite',
        blink: 'blink 1s ease-in-out infinite',
        loading: 'loading 4s linear infinite',
        loading2: 'loading2 4s linear infinite',
        swing: 'swing 1.5s linear infinite',
      },
    },
  },
  plugins: [],
  corePlugins: {
    container: false,
    float: false,
    clear: false,
  },
}